// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DAL;

namespace WebApi.DAL.Migrations
{
    [DbContext(typeof(TransportDbContext))]
    [Migration("20201206190208_AddTestData")]
    partial class AddTestData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.DAL.Models.FuelType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityStatus = 0,
                            Name = "Hybrid"
                        },
                        new
                        {
                            Id = 2,
                            EntityStatus = 0,
                            Name = "Gasoline"
                        },
                        new
                        {
                            Id = 3,
                            EntityStatus = 0,
                            Name = "Diesel"
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PersonalId")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("PersonalId")
                        .IsUnique()
                        .HasFilter("[PersonalId] IS NOT NULL");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityStatus = 0,
                            LastName = "Tsivilashvili",
                            Name = "Nika",
                            PersonalId = "15921850518"
                        },
                        new
                        {
                            Id = 2,
                            EntityStatus = 0,
                            LastName = "Tsivilashvili",
                            Name = "Luka",
                            PersonalId = "23421850518"
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Color")
                        .HasColumnType("int");

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("MakeEn")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MakeGe")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelEn")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ModelGe")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("RegistrationPlate")
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("Vin")
                        .HasColumnType("nvarchar(17)")
                        .HasMaxLength(17);

                    b.HasKey("Id");

                    b.HasIndex("FuelTypeId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = 4,
                            EntityStatus = 0,
                            FuelTypeId = 2,
                            MakeEn = "Nissan",
                            MakeGe = "ნისანი",
                            ManufactureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelEn = "GTR",
                            ModelGe = "ჯიტიერი",
                            RegistrationPlate = "NI-777-KA",
                            Vin = "AB123JVLA179ACA0R"
                        },
                        new
                        {
                            Id = 2,
                            Color = 3,
                            EntityStatus = 0,
                            FuelTypeId = 3,
                            MakeEn = "Opel",
                            MakeGe = "ოპელ",
                            ManufactureDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModelEn = "Vectra",
                            ModelGe = "ვექტრა",
                            RegistrationPlate = "LU-001-KA",
                            Vin = "mn323JVLA179ACA0R"
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.VehicleOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EntityStatus")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleOwner");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityStatus = 0,
                            OwnerId = 1,
                            VehicleId = 1
                        });
                });

            modelBuilder.Entity("WebApi.DAL.Models.Vehicle", b =>
                {
                    b.HasOne("WebApi.DAL.Models.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.DAL.Models.VehicleOwner", b =>
                {
                    b.HasOne("WebApi.DAL.Models.Owner", "Owner")
                        .WithMany("VehicleOwner")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.DAL.Models.Vehicle", "Vehicle")
                        .WithMany("VehicleOwner")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
